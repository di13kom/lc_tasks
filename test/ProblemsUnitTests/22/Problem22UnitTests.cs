using NUnit.Framework;
using LeetCode.Problems._22;

namespace ProblemsUnitTests._22;

public class Problem22UnitTests
{
    [SetUp]
    public void Setup()
    {
    }

    [Test]
    [TestCase(1, new[] { "()" })]
    [TestCase(2, new[] { "(())", "()()" })]
    [TestCase(3, new[] { "((()))", "(()())", "(())()", "()(())", "()()()" })]
    [TestCase(4, new[] { "(((())))", "((()()))", "((())())", "((()))()", "(()(()))", "(()()())", "(()())()", "()((()))", "()(()())", "()(())()", "()()()()" })]
    [TestCase(4, new[] { "(((())))", "((()()))", "((())())", "((()))()", "(()(()))", "(()()())", "(()())()", "(())(())_", "(())()()_", "()((()))", "()(()())", "()(())()", "()()(())_", "()()()()" })]
    [TestCase(5, new[] {"((((()))))",
                        "(((()())))","(((())()))","(((()))())","(((())))()",
                        "((()(())))","((()()()))","((()())())","((()()))()",
                        "(()((())))","(()(()()))","(()(())())","(()(()))()",
                        "()(((())))","()((()()))","()((())())","()((()))()",
                        "()(()())()","()(())()()",
                        "()()(())()","()()()()()"})]
    [TestCase(8, new[] {"(((((((())))))))"})]
    public void Test1(int cnt, string[] expected)
    {
        Assert.That(new Solution().GenerateParenthesis(cnt), Is.EqualTo(expected));
    }
}
